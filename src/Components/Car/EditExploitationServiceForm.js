import React, {useState} from 'react';
import axios from "axios";
import {useLocation, useNavigate} from "react-router-dom";
import {Card} from "react-bootstrap";
import {useTranslation} from "react-i18next";


const EditExploitationServiceForm = () => {
    const navigate = useNavigate();
    const location = useLocation();
    const carId = location.state.carId;
    const [date, setDate] = useState('');
    const [course, setCourse] = useState('');
    const [oilChange, setOilChange] = useState(false);
    const [airFilterChange, setAirFilterChange] = useState(false);
    const [fuelFilterChange, setFuelFilterChange] = useState(false);
    const [timingBeltChange, setTimingBeltChange] = useState(false);
    const [gearBoxOilChange, setGearBoxOilChange] = useState(false);
    const [coolantChange, setCoolantChange] = useState(false);
    const [differentialOilChange, setDifferentialOilChange] = useState(false);
    const [cabinFilterChange, setCabinFilterChange] = useState(false);
    const [powerSteeringFluidChange, setPowerSteeringFluidChange] = useState(false);
    const titleColor = global.config.TileFontColor;
    const buttonColor = global.config.ButtonColor;
    const formBg = global.config.FormBackgroundColor;
    const {t} = useTranslation();

    const formData = {
        carId,
        date,
        course,
        oilChange,
        airFilterChange,
        fuelFilterChange,
        cabinFilterChange,
        timingBeltChange,
        coolantChange,
        gearBoxOilChange,
        powerSteeringFluidChange,
        differentialOilChange
    };
    const handleSubmit = (e) => {
        e.preventDefault();
        axios.post(global.config.HostFront + '/api/cars/add-exploitation-repair', formData)
            .then(response => {
                // Handle success
                console.log(response);
                navigate(`/car-details`, {state: {carId: carId}});

            })
            .catch(error => {
                // Handle error
                console.log(error);
            });
    };

    return (
        <Card style={{background: formBg}}>
            <h4 style={{color: titleColor}}> {t('editExploitationService')}</h4>

            <form onSubmit={handleSubmit}>

                <div className="form-group">
                    <label> {t('date')}:</label>
                    <input type="date" value={date} onChange={(e) => setDate(e.target.value)}/>
                </div>

                <div className="form-group">
                    <label> {t('course')}: </label>
                    <input type="text" value={course} onChange={(e) => setCourse(e.target.value)}/>
                    km
                </div>

                <div className="form-group">
                    <label>{t('oilChange')}:</label>
                    <input type="checkbox" checked={oilChange}
                           onChange={(e) => setOilChange(e.target.checked)}/>
                </div>

                <div className="form-group">
                    <label> {t('airFilterChange')}:</label>
                    <input type="checkbox" checked={airFilterChange}
                           onChange={(e) => setAirFilterChange(e.target.checked)}/>
                </div>

                <div className="form-group">
                    <label> {t('fuelFilterChange')}:</label>
                    <input type="checkbox" checked={fuelFilterChange}
                           onChange={(e) => setFuelFilterChange(e.target.checked)}/>
                </div>

                <div className="form-group">
                    <label>{t('cabinFilterChange')}:</label>
                    <input type="checkbox" checked={cabinFilterChange}
                           onChange={(e) => setCabinFilterChange(e.target.checked)}/>
                </div>

                <div className="form-group">
                    <label>{t('timingBeltChange')}:</label>
                    <input type="checkbox" checked={timingBeltChange}
                           onChange={(e) => setTimingBeltChange(e.target.checked)}/>
                </div>
                <div className="form-group">
                    <label>{t('coolantChange')}:</label>
                    <input type="checkbox" checked={coolantChange}
                           onChange={(e) => setCoolantChange(e.target.checked)}/>
                </div>
                <div className="form-group">
                    <label>{t('gearBoxOilChange')}:</label>
                    <input type="checkbox" checked={gearBoxOilChange}
                           onChange={(e) => setGearBoxOilChange(e.target.checked)}/>
                </div>
                <div className="form-group">
                    <label>{t('powerSteeringFluidChange')}:</label>
                    <input type="checkbox" checked={powerSteeringFluidChange}
                           onChange={(e) => setPowerSteeringFluidChange(e.target.checked)}/>
                </div>
                <div className="form-group">
                    <label>{t('differentialOilChange')}:</label>
                    <input type="checkbox" checked={differentialOilChange}
                           onChange={(e) => setDifferentialOilChange(e.target.checked)}/>
                </div>

                <button type="submit" className={`btn ${buttonColor}`}>{t('submit')}</button>
            </form>


        </Card>
    );
};

export default EditExploitationServiceForm;