import {useTranslation} from "react-i18next";
import React, {useEffect, useState} from "react";
import {Link, useLocation} from "react-router-dom";
import {Button} from "react-bootstrap";


const ExploitationStateWindow = () => {
    const {t} = useTranslation();
    const fontColor = global.config.TileFontColor;
    const tileBgColor = global.config.TileBackgroundColor;
    const location = useLocation();
    const carId = location.state.carId;
    const [car, setCar] = useState([]);

    useEffect(() => {
        fetch(global.config.HostFront + '/api/cars/car/' + carId)
            .then(response => response.json())
            .then(data => {
                setCar(data);
                console.log(data);
            })
            .catch(error => {
                console.log('Error fetching data:', error);
            });
    }, [carId]);
    const formatDate = (dateString) => {
        const options = {year: 'numeric', month: '2-digit', day: '2-digit'};
        const date = new Date(dateString);
        return date.toLocaleDateString(undefined, options);
    };
    return (

        <div className="col-md-4">

            <div className="card shadow" style={{background: tileBgColor}}>
                <h5 style={{color: fontColor}}>{t('exploitationService')}:</h5>

                {car.exploitationState && (
                    <div>
                        <h6 className="card-title"> {t('oilChange')}: {car.exploitationState.lastOilChangeCourse} km/
                            {formatDate(car.exploitationState.lastOilChangeDate)}</h6>
                        <h6 className="card-title"> {t('airFilterChange')}: {car.exploitationState.lastAirFilterChangeCourse} km/
                            {formatDate(car.exploitationState.lastAirFilterChangeDate)}</h6>
                        <h6 className="card-title"> {t('fuelFilterChange')}: {car.exploitationState.lastFuelFilterChangeCourse} km/
                            {formatDate(car.exploitationState.lastFuelFilterChangeDate)}</h6>
                        <h6 className="card-title"> {t('cabinFilterChange')}: {car.exploitationState.lastCabinFilterChangeCourse} km/
                            {formatDate(car.exploitationState.lastCabinFilterChangeDate)}</h6>
                        <h6 className="card-title"> {t('timingBeltChange')}: {car.exploitationState.timingBeltChange} km/
                            {formatDate(car.exploitationState.timingBeltChangeDate)}</h6>
                        <h6 className="card-title"> {t('coolantChange')}: {car.exploitationState.coolantChangeCourse} km/
                            {formatDate(car.exploitationState.coolantChangeDate)}</h6>
                        <h6 className="card-title"> {t('gearBoxOilChange')}: {car.exploitationState.gearBoxOilChangeCourse} km/
                            {formatDate(car.exploitationState.gearBoxOilChangeDate)}</h6>
                        <h6 className="card-title"> {t('powerSteeringFluidChange')}: {car.exploitationState.powerSteeringFluidChangeCourse} km/
                            {formatDate(car.exploitationState.powerSteeringFluidChangeDate)}</h6>
                        <h6 className="card-title"> {t('differentialOilChange')}: {car.exploitationState.gearBoxOilChangeCourse} km/
                            {formatDate(car.exploitationState.gearBoxOilChangeDate)}</h6>
                    </div>)}
                <Link to={"/edit-exploitation-service"} state={{carId: carId}}>
                    <Button className="btn btn-info">
                        {t('editCarExploitation')}
                    </Button>
                </Link>
            </div>
        </div>)
}

export default ExploitationStateWindow;

